name: Rassegna Telpress (7–12 ogni 15')

on:
  # Polling ogni 15 minuti
  schedule:
    - cron: "*/15 * * * *"
  # Avvio manuale quando vuoi
  workflow_dispatch:

concurrency:
  group: telpress-rassegna
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      # ✅ Finestra oraria 07:00–12:00 Europe/Rome SOLO per i run schedulati
      - name: Time window guard (Europe/Rome 07:00–12:00)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          python - <<'PY'
          from datetime import datetime
          from zoneinfo import ZoneInfo
          now = datetime.now(ZoneInfo("Europe/Rome"))
          hhmm = now.hour*100 + now.minute
          print(f"Ora locale: {now.strftime('%Y-%m-%d %H:%M')}")
          if not (700 <= hhmm < 1200):
              print("Fuori finestra (07:00–12:00). Esco senza fare nulla.")
              raise SystemExit(0)
          print("Dentro la finestra. Procedo.")
          PY

      - name: Run Telpress Bot
        env:
          # Config app
          SENDER_FILTER: ${{ secrets.SENDER_FILTER }}
          SUBJECT_PREFIX: ${{ secrets.SUBJECT_PREFIX }}
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
          TIMEZONE: Europe/Rome
          SERVICE_ACCOUNT_FILE: service_account.json

          # Credenziali
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          CLIENT_SECRET_JSON: ${{ secrets.CLIENT_SECRET_JSON }}
          GOOGLE_TOKEN_JSON: ${{ secrets.GOOGLE_TOKEN_JSON }}
        run: |
          # Ricrea i JSON (usa printf per evitare newline extra)
          printf '%s' "$SERVICE_ACCOUNT_JSON" > service_account.json
          printf '%s' "$CLIENT_SECRET_JSON" > client_secret.json

          # Polling "leggero": cerca l'ultima rassegna molto recente
          # (se è già in Drive, lo script la salta da solo)
          python telpress_email_to_drive.py --days 2
