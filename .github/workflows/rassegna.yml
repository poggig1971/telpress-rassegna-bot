name: Rassegna Telpress (08–12:59 ogni 15')

on:
  schedule:
    - cron: "*/15 * * * *"   # GitHub Actions usa UTC; lo script gestisce Europe/Rome
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: telpress-rassegna
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    # Variabili comuni al job (non sensibili)
    env:
      PORTAL_URL: https://ancepiemonte.streamlit.app/
      LOGO_PATH: logo-ance.png
      NOTIFY_BCC_FILE: notify_bcc.txt

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Guard orario: 08:00–12:59 Europe/Rome SOLO per i run schedulati
      - name: Time window guard (Europe/Rome 08:00–12:59)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          python - <<'PY'
          from datetime import datetime
          from zoneinfo import ZoneInfo
          now = datetime.now(ZoneInfo("Europe/Rome"))
          hhmm = now.hour*100 + now.minute
          print(f"Ora locale: {now.strftime('%Y-%m-%d %H:%M')}")
          if not (800 <= hhmm < 1300):
              print("Fuori finestra (08:00–12:59). Esco senza fare nulla.")
              raise SystemExit(0)
          print("Dentro la finestra. Procedo.")
          PY

      # Esecuzione programmata (rispetta finestra oraria, log ridotti)
      - name: Run Telpress Bot (scheduled)
        if: ${{ github.event_name == 'schedule' }}
        env:
          # --- Lettura Telpress ---
          SENDER_FILTER:       ${{ secrets.SENDER_FILTER }}
          SUBJECT_PREFIX:      ${{ secrets.SUBJECT_PREFIX }}
          DRIVE_FOLDER_ID:     ${{ secrets.DRIVE_FOLDER_ID }}
          TIMEZONE:            Europe/Rome
          SERVICE_ACCOUNT_FILE: service_account.json
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          CLIENT_SECRET_JSON:   ${{ secrets.CLIENT_SECRET_JSON }}
          GOOGLE_TOKEN_JSON:    ${{ secrets.GOOGLE_TOKEN_JSON }}

          # --- Notifica via SMTP (Aruba, SOLO SMTPS 465) ---
          SMTP_HOST:           "smtps.aruba.it"
          SMTP_PORT:           "465"
          SMTP_SECURE:         "smtps"   # trattato come SSL nel codice
          SMTP_STRICT:         "1"       # nessun fallback verso 587/STARTTLS
          SMTP_USER:           "news@ancepiemonte.it"
          SMTP_PASS:           ${{ secrets.SMTP_PASS }}
          SMTP_SENDER_NAME:    "ANCE Piemonte Valle d'Aosta News"
          # SMTP_REPLY_TO:     "comunicazioni@ancepiemonte.it"   # opzionale

          # Log minimal (no debug) per schedulata
          DEBUG: "0"
        run: |
          printf '%s' "$SERVICE_ACCOUNT_JSON" > service_account.json
          printf '%s' "$CLIENT_SECRET_JSON"  > client_secret.json
          python telpress_email_to_drive.py --quiet

      # Esecuzione manuale (forza fuori orario, log estesi)
      - name: Run Telpress Bot (manual, force)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          # --- Lettura Telpress ---
          SENDER_FILTER:       ${{ secrets.SENDER_FILTER }}
          SUBJECT_PREFIX:      ${{ secrets.SUBJECT_PREFIX }}
          DRIVE_FOLDER_ID:     ${{ secrets.DRIVE_FOLDER_ID }}
          TIMEZONE:            Europe/Rome
          SERVICE_ACCOUNT_FILE: service_account.json
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          CLIENT_SECRET_JSON:   ${{ secrets.CLIENT_SECRET_JSON }}
          GOOGLE_TOKEN_JSON:    ${{ secrets.GOOGLE_TOKEN_JSON }}

          # --- Notifica via SMTP (Aruba, SOLO SMTPS 465) ---
          SMTP_HOST:           "smtps.aruba.it"
          SMTP_PORT:           "465"
          SMTP_SECURE:         "smtps"
          SMTP_STRICT:         "1"
          SMTP_USER:           "news@ancepiemonte.it"
          SMTP_PASS:           ${{ secrets.SMTP_PASS }}
          SMTP_SENDER_NAME:    "ANCE Piemonte Valle d'Aosta News"
          # SMTP_REPLY_TO:     "comunicazioni@ancepiemonte.it"   # opzionale

          # Debug attivo per run manuale
          DEBUG: "1"
        run: |
          printf '%s' "$SERVICE_ACCOUNT_JSON" > service_account.json
          printf '%s' "$CLIENT_SECRET_JSON"  > client_secret.json
          python telpress_email_to_drive.py --force-now
